---
import Link from "./Link.vue";
---

<div class="prose mt-6">
  <hr />
  <footer class="flex justify-between">
    <span class="text-neutral-500">Ved Kothavade</span>
    <div class="clock">
      <div class="hand hour"></div>
      <div class="hand minute"></div>
      <div class="hand second"></div>
    </div>

    <div class="flex gap-4 max-h items-center">
      <Link href="mailto:ved@kothavade.com">
        <div class="i-radix-icons:envelope-closed link" title="Email"></div>
      </Link>

      <Link href="https://github.com/kothavade">
        <div class="i-radix-icons:github-logo link" title="GitHub"></div>
      </Link>

      <Link href="https://sr.ht/~ved">
        <div class="i-radix-icons:circle link" title="Sourcehut"></div>
      </Link>

      <Link href="https://www.linkedin.com/in/kothavade/">
        <div class="i-radix-icons:linkedin-logo link" title="Linkedin"></div>
      </Link>
    </div>
  </footer>
</div>

<script>
  const startTime = new Date();
  const startS = startTime.getSeconds();
  const startM = startTime.getMinutes() * 60 + startS;
  const startH = (startTime.getHours() % 12) * 3600 + startM;

  refreshClock();

  // compute the rotation amount relative to the starting time
  function refreshClock() {
    const now = new Date();
    let diff = timeDifference(startTime, now);
    let degS = ((startS + diff) / 60) * 360;
    let degM = ((startM + diff) / 3600) * 360;
    let degH = ((startH + diff) / 43200) * 360;

    const hourElement = document.querySelector(".hour") as HTMLElement;
    const minuteElement = document.querySelector(".minute") as HTMLElement;
    const secondElement = document.querySelector(".second") as HTMLElement;

    hourElement.style.transform = rotate(degH).transform;
    minuteElement.style.transform = rotate(degM).transform;
    secondElement.style.transform = rotate(degS).transform;

    setTimeout(refreshClock, 1000);
  }

  // compute the time difference between two date objects (in seconds)
  function timeDifference(date1: Date, date2: Date) {
    return Math.round(Math.abs(date2.getTime() - date1.getTime()) / 1000);
  }

  // returns the cross-browser css rotation properties
  function rotate(deg: number) {
    return {
      "-webkit-transform": "rotate(" + deg + "deg)",
      "-moz-transform": "rotate(" + deg + "deg)",
      "-ms-transform": "rotate(" + deg + "deg)",
      "-o-transform": "rotate(" + deg + "deg)",
      transform: "rotate(" + deg + "deg)",
    };
  }
</script>

<style>
  .link {
    --at-apply: text-neutral-500 hover: text-neutral-400 transition-colors
      duration-300;
  }
  .clock {
    position: relative;
    text-align: center;
    /* max height it can, and make its width match the height */
    height: 1.25rem;
    width: 1.25rem;
    border-radius: 50%;
    border: 0.075rem solid;
    --at-apply: border-neutral-600 background-color: rgba(0, 0, 0, 0);
  }

  .hand {
    position: absolute;
    --at-apply: bg-neutral-500 transition: transform 0.5s ease;
    transform-origin: 50% 100%;
  }

  .hour {
    height: 30%;
    bottom: 50%;
    left: 50%;
    width: 1px;
    margin-left: -1.5px;
  }

  .minute {
    height: 40%;
    bottom: 50%;
    left: 50%;
    width: 1px;
    margin-left: -1px;
  }

  .second {
    height: 45%;
    bottom: 50%;
    left: 50%;
    width: 0.05px;
    margin-left: -0.5px;
  }
</style>
